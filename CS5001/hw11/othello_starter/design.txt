What data structures you’ll need
In HW11, a nested list is used to represent checkerboard. When the element is 0,
 it means te checkerboard is empty. When the element is 1, there is a black tile. 
 When the element is 2, there is a white tile.


Class and Method:
Apart from the top level .pyde file, there are three additional classes. 
Grid class: Initializing the the checkerboard with a background color and several lines

Tile class: Representing the tile. It is initialized with few attributes like the number
 of black and white tile.There are four starter tiles in the middle of the checkerboard, 2 white two black tiles.
Method:
 display(): refresh the checkerboard, where element 1 maps to black tile, element 2 maps to white tile.
 update(): implement necessary graphical change when player or computer made a move: flip the tile, count 
    the number of two color tiles.
 check_legal_move(): checks whether a specified move is legal or not. If it is legal,
    add the tiles that are about to be flipped to a list. 

Computer class: representing the computer(AI).
Method:
 all_legal_moves() method: Check all grid in the board, add the legal move for computer into a list,
    record the move that will flip the most white tiles as best move.
 ai_make_move(): Implementing the best move, flip the black tiles in the line.


Flow of control:
After initializing the checkerboard and four tiles, it is player's(black tile) turn. 
• When the player clicks a grid, it will pass the x and y coordinate of the grid to check_legal_move() method.
    • If that move is legal: the grid will be filled with a black tile and flip the white tile in the line.
      Now it becomes computer's(white tile) turn. 
    • If the player tries to make an illegal move, do nothing until the player choose a legal move.
• The computer will calculate all possible legal moves and and choose one that will flip the most black tiles. 
  It becomes player's turn.
The program will alternate between the above two steps until there is no legal move, which has three cases:
• No legal moves for the player
• No legal moves for the computer
• No legal moves for both sides(i.e. the board is full now)
